{"title":"Positioning Content in the Margin","markdown":{"yaml":{"title":"Positioning Content in the Margin","subtitle":"Create 'Tufte' style documents with sidenotes, margin tables and figures, and other margin content","author":"Charles Teague","date":"2/17/2022","categories":["Features","Layout"],"image":"margin-content.png","reference-location":"margin","citation-location":"margin","title-block-banner":"#FED8D5","title-block-banner-color":"body"},"headingText":"Markdown Tables","containsRefs":false,"markdown":"\n\nQuarto includes a number of features aimed at making it easy to to author and customize markdown table output, including:\n\n-   Specifying column alignment and widths.\n-   Providing captions, subcaptions, and cross-references.\n-   Generating tables dynamically from executable code cells.\n\nThis post provides an overview of these capabilities in Quarto. For more detail about all the features Quarto for authoring tables, see [Tables](/docs/authoring/tables.qmd).\n\n\nThe most commonly used markdown table is known as a pipe table. Pipe tables support specifying per column alignment as well as captions. For example:\n\n``` markdown\n| Default | Left | Right | Center |\n|---------|:-----|------:|:------:|\n| 12      | 12   |    12 |   12   |\n| 123     | 123  |   123 |  123   |\n| 1       | 1    |     1 |   1    |\n\n: Demonstration of pipe table sytnax\n```\n\nHere is the table rendered to HTML:\n\n| Default | Left | Right | Center |\n|---------|:-----|------:|:------:|\n| 12      | 12   |    12 |   12   |\n| 123     | 123  |   123 |  123   |\n| 1       | 1    |     1 |   1    |\n\n: Demonstration of pipe table syntax\n\n#### Caption Location\n\nBy default, table captions are positioned above tables. You can modify this behavior using the `tbl-cap-location` option. For example:\n\n``` yaml\n---\ntbl-cap-location: top\n---\n```\n\n## Explicit Column Widths\n\nBeyond standard pipe table syntax for expressing column width, you can also explicitly specify columns widths using the `tbl-colwidths` attribute or document-level option. For an individual markdown table, add the attribute after the caption. For example:\n\n``` markdown\n| fruit  | price  |\n|--------|--------:\n| apple  | 2.05   |\n| pear   | 1.37   |\n| orange | 3.09   |\n\n: Fruit prices {tbl-colwidths=\"[75,25]\"}\n```\n\nNote that this option is specified at the top level so that it can be shared by both PDF and HTML formats. If you are only targeting a single format you can place it alongside other `format` specific options.\n\nValid values for the caption location include:\n\n| Value    | Description                           |\n|----------|---------------------------------------|\n| `top`    | Position the caption above the table. |\n| `bottom` | Position the caption below the table. |\n| `margin` | Position the caption in the margin.   |\n\n## Computations\n\nAll of the options described above work for tables produced by executable code cells. For example, here we apply the `tbl-cap`, `tbl-colwidths` and `tbl-caption-location` options to a code cell:\n\n``` {{r}}\n#| tbl-cap: \"Cars\"\n#| tbl-colwidths: [60,40]\n#| tbl-cap-location: margin\n\nlibrary(knitr)\nkable(head(cars))\n```\n\nIn addition to the above, which focused on some of the features of Quarto when writing pipe tables in markdown, you can also author tables using grid syntax. You review the [documentation](/docs/authoring/tables.qmd). for more detail.\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"self-contained-math":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"reference-location":"margin","output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"theme":{"light":["zephyr","../../../theme.scss"],"dark":["cyborg"]},"comments":{"giscus":{"repo":"quarto-dev/quarto-web","category":"Blog"}},"title-block-banner":"#FED8D5","title-block-banner-color":"body","toc-location":"left","search":false,"sidebar":false,"title":"Positioning Content in the Margin","subtitle":"Create 'Tufte' style documents with sidenotes, margin tables and figures, and other margin content","author":"Charles Teague","date":"2/17/2022","categories":["Features","Layout"],"image":"margin-content.png","citation-location":"margin"},"extensions":{"book":{"multiFile":true}}}}}